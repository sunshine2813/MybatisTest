<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sdhh.mapper.FinanceMapper">
    <resultMap id="BaseResultMap" type="com.sdhh.po.Finance">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="imageurl" property="imageurl" jdbcType="VARCHAR"/>
        <result column="imagenames" property="imagenames" jdbcType="VARCHAR"/>
        <result column="attachurl" property="attachurl" jdbcType="VARCHAR"/>
        <result column="attachnames" property="attachnames" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.sdhh.po.Finance" extends="BaseResultMap">
        <result column="detail" property="detail" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, type, name, username, imageurl, imagenames, attachurl, attachnames
    </sql>
    <sql id="Blob_Column_List">
        detail
    </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from finance
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from finance
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.sdhh.po.Finance">
        insert into finance (id, type, name,
        username, imageurl, imagenames,
        attachurl, attachnames, detail
        )
        values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{username,jdbcType=VARCHAR}, #{imageurl,jdbcType=VARCHAR}, #{imagenames,jdbcType=VARCHAR},
        #{attachurl,jdbcType=VARCHAR}, #{attachnames,jdbcType=VARCHAR}, #{detail,jdbcType=LONGVARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.sdhh.po.Finance">
        insert into finance
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="imageurl != null">
                imageurl,
            </if>
            <if test="imagenames != null">
                imagenames,
            </if>
            <if test="attachurl != null">
                attachurl,
            </if>
            <if test="attachnames != null">
                attachnames,
            </if>
            <if test="detail != null">
                detail,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="imageurl != null">
                #{imageurl,jdbcType=VARCHAR},
            </if>
            <if test="imagenames != null">
                #{imagenames,jdbcType=VARCHAR},
            </if>
            <if test="attachurl != null">
                #{attachurl,jdbcType=VARCHAR},
            </if>
            <if test="attachnames != null">
                #{attachnames,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                #{detail,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.sdhh.po.Finance">
        update finance
        <set>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="imageurl != null">
                imageurl = #{imageurl,jdbcType=VARCHAR},
            </if>
            <if test="imagenames != null">
                imagenames = #{imagenames,jdbcType=VARCHAR},
            </if>
            <if test="attachurl != null">
                attachurl = #{attachurl,jdbcType=VARCHAR},
            </if>
            <if test="attachnames != null">
                attachnames = #{attachnames,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                detail = #{detail,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sdhh.po.Finance">
        update finance
        set type = #{type,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        username = #{username,jdbcType=VARCHAR},
        imageurl = #{imageurl,jdbcType=VARCHAR},
        imagenames = #{imagenames,jdbcType=VARCHAR},
        attachurl = #{attachurl,jdbcType=VARCHAR},
        attachnames = #{attachnames,jdbcType=VARCHAR},
        detail = #{detail,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sdhh.po.Finance">
        update finance
        set type = #{type,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        username = #{username,jdbcType=VARCHAR},
        imageurl = #{imageurl,jdbcType=VARCHAR},
        imagenames = #{imagenames,jdbcType=VARCHAR},
        attachurl = #{attachurl,jdbcType=VARCHAR},
        attachnames = #{attachnames,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!-- ADD custom -->

    <insert id="addFinance" parameterType="com.sdhh.po.Finance" useGeneratedKeys="true" keyProperty="id">
        insert into
        finance(name,type,username,detail)
        values(#{name},#{type},#{username},#{detail})
    </insert>

    <update id="setUrl">
        update finance
        set imageurl = #{imageurl},attachurl = #{attachurl}
        where id = #{dbId}
    </update>

    <!-- 查询资料语句 有2个关键词 type name
    查询语句 有4种: t,n, tn, all(全部)
     -->
    <select id="getAllFinance" resultType="finance">
        select * from finance
    </select>

    <select id="getAllFinanceByUsername" resultType="finance">
        select * from finance
        where username = #{username}
    </select>


    <select id="getTFinance" resultType="finance">
        select * from finance
        where type=#{type}
    </select>

    <select id="getTFinanceByUsername" resultType="finance">
        select * from finance
        where type = #{type} and username = #{username}
    </select>

    <select id="getNFinance" resultType="finance">
        select * from finance
        where name like CONCAT('%', #{name}, '%')
    </select>

    <select id="getNFinanceByUsername" resultType="finance">
        select * from finance
        where username = #{username} and name like CONCAT('%', #{name}, '%')
    </select>

    <select id="getTNFinance" resultType="finance">
        select * from finance
        where type = #{type} and name like CONCAT('%', #{name}, '%')
    </select>

    <select id="getTNFinanceByUsername" resultType="finance">
        select * from finance
        where type = #{type} and username = #{username} and name like CONCAT('%', #{name}, '%')
    </select>


    <delete id="deleteFinanceById">
        delete from finance
        where id = #{id}
    </delete>


    <select id="getImagenamesById" resultType="String">
        select imagenames from finance
        where id = #{id}
    </select>

    <update id="addImagenamesById">
        update finance
        set imagenames = #{newImagenames}
        where id = #{dbId}
    </update>

    <select id="getAttachnamesById" resultType="String">
        select attachnames from finance
        where id = #{dbId}
    </select>

    <update id="addAttachnamesById">
        update finance
        set attachnames = #{newAttachnames}
        where id = #{dbId}
    </update>


</mapper>